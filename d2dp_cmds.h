#ifndef __D2DP_CMDS__
#define __D2DP_CMDS__

struct cmd_item {
	int type;
	int reg;
    int value;//if null, read. else write
};


#define CMD_WRITE 	0
#define CMD_READ 	1
#define CMD_DELAY 	2

struct cmd_item cmds_x [] = {
{CMD_READ  ,0x0800,  0},
{CMD_READ  ,0x0500,  0},
};

struct cmd_item cmds_test [] = {
{CMD_READ  ,0x0500,  0x00000000},
{CMD_WRITE ,0x06A0,  0x02202086},
{CMD_WRITE ,0x07A0,  0x02202086},
{CMD_WRITE ,0x0918,  0x00000101},
{CMD_WRITE ,0x0800,  0x03000007},
{CMD_WRITE ,0x0900,  0x00000005},
{CMD_WRITE ,0x0904,  0x00000005},
{CMD_WRITE ,0x0800,  0x13001107},
{CMD_WRITE ,0x0800,  0x03000007},
{CMD_READ  ,0x0800,  0x03010007},
{CMD_WRITE ,0x06A0,  0x02202186},
{CMD_WRITE ,0x0600,  0x00000001},
{CMD_WRITE ,0x0810,  0x00000101},
{CMD_WRITE ,0x0810,  0x00010101},
{CMD_WRITE ,0x0810,  0x00020101},
{CMD_WRITE ,0x0810,  0x00030101},
{CMD_WRITE ,0x0810,  0x00FF0101},
};

struct cmd_item cmds_normal_723[] = {


//Setup Main Link					
{CMD_WRITE, 0x06A0,0x11113087},{CMD_DELAY, 35, 0}, //DP0_SrcCtrl					
{CMD_WRITE, 0x07A0,0x11113002},{CMD_DELAY, 35, 0}, //DP1_SrcCtrl					
{CMD_WRITE, 0x0918,0x00000101},{CMD_DELAY, 35, 0}, //SYS_PLLPARAM					
//DP-PHY/PLLs					
{CMD_WRITE, 0x0800,0x03000007},{CMD_DELAY, 35, 0}, //DP_PHY_CTRL					
{CMD_WRITE, 0x0900,0x00000005},{CMD_DELAY, 35, 0}, //DP0_PLLCTRL					
{CMD_WRITE, 0x0904,0x00000005},{CMD_DELAY, 35, 0}, //DP1_PLLCTRL					
{CMD_DELAY, 1, 0},{CMD_DELAY, 35, 0},					
{CMD_WRITE, 0x0914,0x01330141},{CMD_DELAY, 35, 0}, //PXL_PLLPARAM					
{CMD_WRITE, 0x0908,0x00000005},{CMD_DELAY, 35, 0}, //PXL_PLLCTRL					
{CMD_DELAY, 1, 0},{CMD_DELAY, 35, 0},					
//DSI RD LPTX setting					
{CMD_WRITE, 0x013C,0x00070009},{CMD_DELAY, 35, 0}, //PPI_TX_RX_TA					
{CMD_WRITE, 0x0114,0x00000006},{CMD_DELAY, 35, 0}, //PPI_LPTXTIMECNT					
//Device ID RD					
{CMD_READ, 0x0500, 0},{CMD_DELAY, 35, 0}, //IDREG					
//Reset/Enable Main Link(s)					
{CMD_WRITE, 0x0800,0x13001107},{CMD_DELAY, 35, 0}, //DP_PHY_CTRL					
{CMD_WRITE, 0x0800,0x03000007},{CMD_DELAY, 35, 0}, //DP_PHY_CTRL					
{CMD_DELAY, 35, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x0800, 0},{CMD_DELAY, 35, 0}, //DP_PHY_CTRL					
//Read DP Rx Link Capability					
{CMD_WRITE, 0x0664,0x0001063F},{CMD_DELAY, 35, 0}, //DP0_AuxCfg1					
{CMD_WRITE, 0x0668,0x00000000},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x0660,0x00000209},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
{CMD_DELAY, 1, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x068C, 0},{CMD_DELAY, 35, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0},{CMD_DELAY, 35, 0}, //DP0_AuxRData0					
//Set Link Rate and Lane Count (DPCD 00100h,00101h)					
{CMD_WRITE, 0x0668,0x00000100},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x0000020A},{CMD_DELAY, 35, 0}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000108},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
//Set Main Link Channel Coding (DPCD 00108h)					
{CMD_WRITE, 0x0668,0x00000108},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x00000001},{CMD_DELAY, 35, 0}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000008},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
//Write DPCD 00103h~00104h before Training Pat1					
{CMD_WRITE, 0x0668,0x00000103},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x00000101},{CMD_DELAY, 35, 0}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000108},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
//Set DPCD 00102h for Training Pat 1					
{CMD_WRITE, 0x06E4,0x00000021},{CMD_DELAY, 35, 0}, //DP0_SnkLTCtrl					
{CMD_WRITE, 0x06D8,0xF600000D},{CMD_DELAY, 35, 0}, //DP0_LTLoopCtrl					
//Set DP0 Trainin Pattern 1					
{CMD_WRITE, 0x06A0,0x01013086},{CMD_DELAY, 35, 0}, //DP0_SrcCtrl					
{CMD_WRITE, 0x06A0,0x01013187},{CMD_DELAY, 35, 0}, //DP0_SrcCtrl					
//Enable DP0 to start Link Training					
{CMD_WRITE, 0x0600,0x00000001},{CMD_DELAY, 35, 0}, //DP0Ctl					
{CMD_DELAY, 10, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x06D0, 0},{CMD_DELAY, 35, 0}, //DP0_LTStat					
//Set DPCD 00102h for Link Traing Pat 2					
{CMD_WRITE, 0x06E4,0x00000022},{CMD_DELAY, 35, 0}, //DP0_SnkLTCtrl					
//Write DPCD 00103h~00104h before Training Pat2					
{CMD_WRITE, 0x0668,0x00000103},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x00000909},{CMD_DELAY, 35, 0}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000108},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
//Set DP0 Trainin Pattern 2					
{CMD_WRITE, 0x06A0,0x11113086},{CMD_DELAY, 35, 0}, //DP0_SrcCtrl					
{CMD_WRITE, 0x06A0,0x11113287},{CMD_DELAY, 35, 0}, //DP0_SrcCtrl					
{CMD_DELAY, 10, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x06D0, 0},{CMD_DELAY, 35, 0}, //DP0_LTStat					
//Clear DPCD 00102h					
{CMD_WRITE, 0x0668,0x00000102},{CMD_DELAY, 35, 0}, //AuxAddr					
{CMD_WRITE, 0x066C,0x00000000},{CMD_DELAY, 35, 0}, //AuxWData0					
{CMD_WRITE, 0x0660,0x00000008},{CMD_DELAY, 35, 0}, //AuxCfg0					
//Clear DP0 Trainin Pattern					
{CMD_WRITE, 0x06A0,0x11111087},{CMD_DELAY, 35, 0}, //DP0_SrcCtrl					
//Read DPCD 00200h-00206h					
{CMD_WRITE, 0x0668,0x00000200},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x0660,0x00000609},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
{CMD_DELAY, 1, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x068C, 0},{CMD_DELAY, 35, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0},{CMD_DELAY, 35, 0}, //DP0_AuxRData0					
{CMD_READ, 0x0680, 0},{CMD_DELAY, 35, 0}, //DP0_AuxRData1					
//Write DPCD 0010Ah (ASSR, Enhanced Framing)					
{CMD_WRITE, 0x0668,0x0000010A},{CMD_DELAY, 35, 0}, //AuxAddr					
{CMD_WRITE, 0x066C,0x00000000},{CMD_DELAY, 35, 0}, //AuxWData0					
{CMD_WRITE, 0x0660,0x00000008},{CMD_DELAY, 35, 0}, //AuxCfg0					
//Write DPCD 00107h (SSCG)					
{CMD_WRITE, 0x0668,0x00000107},{CMD_DELAY, 35, 0}, //AuxAddr					
{CMD_WRITE, 0x066C,0x00000000},{CMD_DELAY, 35, 0}, //AuxWData0					
{CMD_WRITE, 0x0660,0x00000008},{CMD_DELAY, 35, 0}, //AuxCfg0					
//Read DPCD 00100h-00106h					
{CMD_WRITE, 0x0668,0x00000100},{CMD_DELAY, 35, 0}, //DP0_AuxAddr					
{CMD_WRITE, 0x0660,0x00000609},{CMD_DELAY, 35, 0}, //DP0_AuxCfg0					
{CMD_DELAY, 1, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x068C, 0},{CMD_DELAY, 35, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0},{CMD_DELAY, 35, 0}, //DP0_AuxRData0					
{CMD_READ, 0x0680, 0},{CMD_DELAY, 35, 0}, //DP0_AuxRData1					
{CMD_WRITE, 0x013C,0x00070009},{CMD_DELAY, 35, 0}, //PPI_TX_RX_TA					
{CMD_WRITE, 0x0114,0x00000006},{CMD_DELAY, 35, 0}, //PPI_LPTXTIMECNT					
{CMD_WRITE, 0x0164,0x00000008},{CMD_DELAY, 35, 0}, //CLRSIPOCOUNT					
{CMD_WRITE, 0x0168,0x00000008},{CMD_DELAY, 35, 0}, //CLRSIPOCOUNT					
{CMD_WRITE, 0x016C,0x00000008},{CMD_DELAY, 35, 0}, //CLRSIPOCOUNT					
{CMD_WRITE, 0x0170,0x00000008},{CMD_DELAY, 35, 0}, //CLRSIPOCOUNT					
{CMD_WRITE, 0x0134,0x0000001F},{CMD_DELAY, 35, 0}, //PPI_LANEENABLE					
{CMD_WRITE, 0x0210,0x0000001F},{CMD_DELAY, 35, 0}, //DSI_LANEENABLE					
{CMD_WRITE, 0x0104,0x00000001},{CMD_DELAY, 35, 0}, //PPI_STARTPPI					
{CMD_WRITE, 0x0204,0x00000001},{CMD_DELAY, 35, 0}, //DSI_STARTDSI					
//LCD Ctl Frame Size					
{CMD_WRITE, 0x0450,0x06400100},{CMD_DELAY, 35, 0}, //VPCTRL0					
{CMD_WRITE, 0x0454,0x00500020},{CMD_DELAY, 35, 0}, //HTIM01					
{CMD_WRITE, 0x0458,0x00300780},{CMD_DELAY, 35, 0}, //HTIM02					
{CMD_WRITE, 0x045C,0x00170005},{CMD_DELAY, 35, 0}, //VTIM01					
{CMD_WRITE, 0x0460,0x00030438},{CMD_DELAY, 35, 0}, //VTIM02					
{CMD_WRITE, 0x0464,0x00000001},{CMD_DELAY, 35, 0}, //VFUEN0					
//DP Main Stream Attirbutes					
{CMD_WRITE, 0x0644,0x003E07F0},{CMD_DELAY, 35, 0}, //DP0_VidSyncDly					
{CMD_WRITE, 0x0648,0x04570820},{CMD_DELAY, 35, 0}, //DP0_TotalVal					
{CMD_WRITE, 0x064C,0x001C0070},{CMD_DELAY, 35, 0}, //DP0_StartVal					
{CMD_WRITE, 0x0650,0x04380780},{CMD_DELAY, 35, 0}, //DP0_ActiveVal					
{CMD_WRITE, 0x0654,0x80058020},{CMD_DELAY, 35, 0}, //DP0_SyncVal					
//DP Flow Shape & TimeStamp					
{CMD_WRITE, 0x0658,0x1F3F0020},{CMD_DELAY, 35, 0}, //DP0_Misc					
//Nvid/Mvid setting					
{CMD_WRITE, 0x0610,0x00006180},{CMD_DELAY, 35, 0}, //DP0_Vid_fM					
{CMD_WRITE, 0x0614,0x0000BDD8},{CMD_DELAY, 35, 0}, //DP0_Vid_N					
//Enable Video and DP link					
{CMD_WRITE, 0x0600,0x00000041},{CMD_DELAY, 35, 0}, //DP0Ctl					
{CMD_WRITE, 0x0600,0x00000043},{CMD_DELAY, 35, 0}, //DP0Ctl					
{CMD_WRITE, 0x0510,0x00000001},{CMD_DELAY, 35, 0}, //SYSCTRL					
{CMD_DELAY, 1, 0},{CMD_DELAY, 35, 0},					
{CMD_READ, 0x0610, 0},{CMD_DELAY, 35, 0}, //DP0_Vid_fM					
{CMD_READ, 0x0614, 0},{CMD_DELAY, 35, 0}, //DP0_Vid_N					
{CMD_READ, 0x0618, 0},{CMD_DELAY, 35, 0}, //DP0_Vid_M					
{CMD_READ, 0x0508, 0},{CMD_DELAY, 35, 0}, //SYSSTAT					
{CMD_READ, 0x0220, 0},{CMD_DELAY, 35, 0}, //DSI_INTSTATUS					


};

struct cmd_item cmds_colorbar[] = {
//Setup Main Link					
{CMD_WRITE, 0x06A0,0x11113087}, //DP0_SrcCtrl					
{CMD_WRITE, 0x07A0,0x11113002}, //DP1_SrcCtrl					
{CMD_WRITE, 0x0918,0x00000101}, //SYS_PLLPARAM					
//DP-PHY/PLLs					
{CMD_WRITE, 0x0800,0x03000007}, //DP_PHY_CTRL					
{CMD_WRITE, 0x0900,0x00000005}, //DP0_PLLCTRL					
{CMD_WRITE, 0x0904,0x00000005}, //DP1_PLLCTRL					
{CMD_DELAY,0,1},					
{CMD_WRITE, 0x0914,0x01330141}, //PXL_PLLPARAM					
{CMD_WRITE, 0x0908,0x00000005}, //PXL_PLLCTRL					
{CMD_DELAY,0,1},					
//Device ID RD					
{CMD_READ, 0x0500, 0}, //IDREG					
//Reset/Enable Main Link(s)					
{CMD_WRITE, 0x0800,0x13001107}, //DP_PHY_CTRL					
{CMD_WRITE, 0x0800,0x03000007}, //DP_PHY_CTRL					
{CMD_DELAY,0,35},					
{CMD_READ, 0x0800, 0}, //DP_PHY_CTRL					
//Read DP Rx Link Capability					
{CMD_WRITE, 0x0664,0x0001063F}, //DP0_AuxCfg1					
{CMD_WRITE, 0x0668,0x00000000}, //DP0_AuxAddr					
{CMD_WRITE, 0x0660,0x00000209}, //DP0_AuxCfg0					
{CMD_DELAY,0,1},					
{CMD_READ, 0x068C, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0}, //DP0_AuxRData0					
//Set Link Rate and Lane Count (DPCD 00100h,00101h)					
{CMD_WRITE, 0x0668,0x00000100}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x0000020A}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000108}, //DP0_AuxCfg0					
//Set Main Link Channel Coding (DPCD 00108h)					
{CMD_WRITE, 0x0668,0x00000108}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x00000001}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000008}, //DP0_AuxCfg0					
//Write DPCD 00103h~00104h before Training Pat1					
{CMD_WRITE, 0x0668,0x00000103}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x00000101}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000108}, //DP0_AuxCfg0					
//Set DPCD 00102h for Training Pat 1					
{CMD_WRITE, 0x06E4,0x00000021}, //DP0_SnkLTCtrl					
{CMD_WRITE, 0x06D8,0xF600000D}, //DP0_LTLoopCtrl					
//Set DP0 Trainin Pattern 1					
{CMD_WRITE, 0x06A0,0x01013086}, //DP0_SrcCtrl					
{CMD_WRITE, 0x06A0,0x01013187}, //DP0_SrcCtrl					
//Enable DP0 to start Link Training					
{CMD_WRITE, 0x0600,0x00000001}, //DP0Ctl					
{CMD_DELAY,0,10},					
{CMD_READ, 0x06D0, 0}, //DP0_LTStat					
//Set DPCD 00102h for Link Traing Pat 2					
{CMD_WRITE, 0x06E4,0x00000022}, //DP0_SnkLTCtrl					
//Write DPCD 00103h~00104h before Training Pat2					
{CMD_WRITE, 0x0668,0x00000103}, //DP0_AuxAddr					
{CMD_WRITE, 0x066C,0x00000909}, //DP0_AuxWData0					
{CMD_WRITE, 0x0660,0x00000108}, //DP0_AuxCfg0					
//Set DP0 Trainin Pattern 2					
{CMD_WRITE, 0x06A0,0x11113086}, //DP0_SrcCtrl					
{CMD_WRITE, 0x06A0,0x11113287}, //DP0_SrcCtrl					
{CMD_DELAY,0,10},					
{CMD_READ, 0x06D0, 0}, //DP0_LTStat					
//Clear DPCD 00102h					
{CMD_WRITE, 0x0668,0x00000102}, //AuxAddr					
{CMD_WRITE, 0x066C,0x00000000}, //AuxWData0					
{CMD_WRITE, 0x0660,0x00000008}, //AuxCfg0					
//Clear DP0 Trainin Pattern					
{CMD_WRITE, 0x06A0,0x11111087}, //DP0_SrcCtrl					
//Read DPCD 00200h-00206h					
{CMD_WRITE, 0x0668,0x00000200}, //DP0_AuxAddr					
{CMD_WRITE, 0x0660,0x00000609}, //DP0_AuxCfg0					
{CMD_DELAY,0,1},					
{CMD_READ, 0x068C, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0}, //DP0_AuxRData0					
{CMD_READ, 0x0680, 0}, //DP0_AuxRData1					
//Write DPCD 0010Ah (ASSR, Enhanced Framing)					
{CMD_WRITE, 0x0668,0x0000010A}, //AuxAddr					
{CMD_WRITE, 0x066C,0x00000000}, //AuxWData0					
{CMD_WRITE, 0x0660,0x00000008}, //AuxCfg0					
//Write DPCD 00107h (SSCG)					
{CMD_WRITE, 0x0668,0x00000107}, //AuxAddr					
{CMD_WRITE, 0x066C,0x00000000}, //AuxWData0					
{CMD_WRITE, 0x0660,0x00000008}, //AuxCfg0					
//Read DPCD 00100h-00106h					
{CMD_WRITE, 0x0668,0x00000100}, //DP0_AuxAddr					
{CMD_WRITE, 0x0660,0x00000609}, //DP0_AuxCfg0					
{CMD_DELAY,0,1},					
{CMD_READ, 0x068C, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0}, //DP0_AuxRData0					
{CMD_READ, 0x0680, 0}, //DP0_AuxRData1					
//LCD Ctl Frame Size					
{CMD_WRITE, 0x0450,0x06400100}, //VPCTRL0					
{CMD_WRITE, 0x0454,0x00500020}, //HTIM01					
{CMD_WRITE, 0x0458,0x00300780}, //HTIM02					
{CMD_WRITE, 0x045C,0x00170005}, //VTIM01					
{CMD_WRITE, 0x0460,0x00030438}, //VTIM02					
{CMD_WRITE, 0x0464,0x00000001}, //VFUEN0					
//DP Main Stream Attirbutes					
{CMD_WRITE, 0x0644,0x003E07F0}, //DP0_VidSyncDly					
{CMD_WRITE, 0x0648,0x04570820}, //DP0_TotalVal					
{CMD_WRITE, 0x064C,0x001C0070}, //DP0_StartVal					
{CMD_WRITE, 0x0650,0x04380780}, //DP0_ActiveVal					
{CMD_WRITE, 0x0654,0x80058020}, //DP0_SyncVal					
//DP Flow Shape & TimeStamp					
{CMD_WRITE, 0x0658,0x1F3F0020}, //DP0_Misc					
//For Color Bar Test					
{CMD_WRITE, 0x0A00,0x78006312}, //D2DPTestCtl					
//Nvid/Mvid setting					
{CMD_WRITE, 0x0610,0x00006180}, //DP0_Vid_fM					
{CMD_WRITE, 0x0614,0x0000BDD8}, //DP0_Vid_N					
//Enable Video and DP link					
{CMD_WRITE, 0x0600,0x00000041}, //DP0Ctl					
{CMD_WRITE, 0x0600,0x00000043}, //DP0Ctl					
{CMD_WRITE, 0x0510,0x00000003}, //SYSCTRL					
{CMD_DELAY,0,1},					
{CMD_READ, 0x0610, 0}, //DP0_Vid_fM					
{CMD_READ, 0x0614, 0}, //DP0_Vid_N					
{CMD_READ, 0x0618, 0}, //DP0_Vid_M					
{CMD_READ, 0x0508, 0}, //SYSSTAT					
{CMD_READ, 0x0220, 0}, //DSI_INTSTATUS					
					
};


struct cmd_item cmds_normal [] = {

{CMD_WRITE,0xA087,0x301111},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xA002,0x301111},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x1801,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0007,0x000003},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0005,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0405,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x1441,0x013301},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0805,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0007,0x110013},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0007,0x000003},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6800,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C0A,0x020000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6808,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C01,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6803,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C01,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xE421,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xD80D,0x0000F6},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xA086,0x300101},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xA087,0x310101},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0001,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xE422,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6803,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C09,0x090000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xA086,0x301111},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xA087,0x321111},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6802,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C00,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0xA087,0x101111},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x680A,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C00,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6807,0x010000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C00,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6008,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x3C09,0x000700},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x1406,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6408,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6808,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6C08,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x7008,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x341F,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x101F,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0401,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0401,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5000,0x014006},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5420,0x005000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5880,0x073000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5C05,0x001700},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6038,0x040300},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x6401,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x44F0,0x073E00},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x4820,0x085704},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x4C70,0x001C00},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5080,0x073804},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5420,0x800580},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x5820,0x003F1F},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x1080,0x610000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x14D8,0xBD0000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0041,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x0043,0x000000},{CMD_DELAY, 30, 0},					
{CMD_WRITE,0x1001,0x000000},{CMD_DELAY, 30, 0},					


};

struct cmd_item cmds_1lan [] = {

{CMD_WRITE,0x06A0,0x11113081},
{CMD_WRITE,0x07A0,0x13133000},
{CMD_WRITE,0x0918,0x00000101},
{CMD_WRITE,0x0800,0x03000003},
{CMD_WRITE,0x0900,0x00000005},
{CMD_WRITE,0x0904,0x00000005},
{CMD_DELAY, 1   ,0x0},
{CMD_WRITE,0x0914,0x01330141},
{CMD_WRITE,0x0908,0x00000005},
{CMD_DELAY, 1   ,0x0 },
{CMD_WRITE,0x0800,0x13001103},
{CMD_WRITE,0x0800,0x03000003},
{CMD_DELAY, 35  ,0x0 },
{CMD_WRITE,0x0668,0x00000100},
{CMD_WRITE,0x066C,0x00000106},
{CMD_WRITE,0x0660,0x00000108},
{CMD_WRITE,0x0668,0x00000108},
{CMD_WRITE,0x066C,0x00000001},
{CMD_WRITE,0x0660,0x00000008},
{CMD_WRITE,0x0668,0x00000103},
{CMD_WRITE,0x066C,0x00000003},
{CMD_WRITE,0x0660,0x00000108},
{CMD_WRITE,0x06E4,0x00000021},
{CMD_WRITE,0x06D8,0xF600000D},
{CMD_WRITE,0x06A0,0x03033080},
{CMD_WRITE,0x06A0,0x03033181},
{CMD_WRITE,0x0600,0x00000001},
{CMD_DELAY, 10  ,0x0 },
{CMD_WRITE,0x06E4,0x00000022},
{CMD_WRITE,0x0668,0x00000103},
{CMD_WRITE,0x066C,0x0000000B},
{CMD_WRITE,0x0660,0x00000108},
{CMD_WRITE,0x06A0,0x13133080},
{CMD_WRITE,0x06A0,0x13133281},
{CMD_DELAY, 10  ,0x0 },
{CMD_WRITE,0x0668,0x00000102},
{CMD_WRITE,0x066C,0x00000000},
{CMD_WRITE,0x0660,0x00000008},
{CMD_WRITE,0x06A0,0x13131081},
{CMD_WRITE,0x0668,0x0000010A},
{CMD_WRITE,0x066C,0x00000000},
{CMD_WRITE,0x0660,0x00000008},
{CMD_WRITE,0x0668,0x00000107},
{CMD_WRITE,0x066C,0x00000000},
{CMD_WRITE,0x0660,0x00000008},
{CMD_WRITE,0x0450,0x06400100},
{CMD_WRITE,0x0454,0x00500020},
{CMD_WRITE,0x0458,0x00300780},
{CMD_WRITE,0x045C,0x00170005},
{CMD_WRITE,0x0460,0x00030438},
{CMD_WRITE,0x0464,0x00000001},
{CMD_WRITE,0x0644,0x003E07F0},
{CMD_WRITE,0x0648,0x04570820},
{CMD_WRITE,0x064C,0x001C0070},
{CMD_WRITE,0x0650,0x04380780},
{CMD_WRITE,0x0654,0x80058020},
{CMD_WRITE,0x0658,0x1F3F0020},
{CMD_WRITE,0x0610,0x00009240},
{CMD_WRITE,0x0614,0x0000AADC},
{CMD_WRITE,0x0600,0x00000041},
{CMD_WRITE,0x0600,0x00000043},
{CMD_WRITE,0x0510,0x00000003},
};


struct cmd_item cmds_readback [] = {

{CMD_READ, 0x0918, 0}, //IDREG
{CMD_READ, 0x07A0, 0}, //IDREG	
{CMD_READ, 0x0500, 0}, //IDREG					
{CMD_READ, 0x0800, 0}, //DP_PHY_CTRL					
{CMD_READ, 0x068C, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0}, //DP0_AuxRData0					
{CMD_READ, 0x06D0, 0}, //DP0_LTStat					
{CMD_READ, 0x06D0, 0}, //DP0_LTStat					
{CMD_READ, 0x068C, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0}, //DP0_AuxRData0					
{CMD_READ, 0x0680, 0}, //DP0_AuxRData1					
{CMD_READ, 0x068C, 0}, //DP0_AuxStatus					
{CMD_READ, 0x067C, 0}, //DP0_AuxRData0					
{CMD_READ, 0x0680, 0}, //DP0_AuxRData1					
{CMD_READ, 0x0610, 0}, //DP0_Vid_fM					
{CMD_READ, 0x0614, 0}, //DP0_Vid_N					
{CMD_READ, 0x0618, 0}, //DP0_Vid_M					
{CMD_READ, 0x0508, 0}, //SYSSTAT					
{CMD_READ, 0x0220, 0}, //DSI_INTSTATUS					
{CMD_DELAY,100, 0}, //DSI_INTSTATUS					
{CMD_READ, 0x06A0, 0}, //DSI_INTSTATUS					
{CMD_READ, 0x0648, 0}, //DSI_INTSTATUS					



};


struct cmd_list {
	char* name;
	struct cmd_item* cmds;
	unsigned int len;
};

struct cmd_list cmds_group[] = {
	{"colorbar", cmds_colorbar, sizeof(cmds_colorbar)/sizeof(struct cmd_item)},//0
	{"normal", cmds_normal, sizeof(cmds_normal)/sizeof(struct cmd_item)},//1
	{"1lan", cmds_1lan, sizeof(cmds_1lan)/sizeof(struct cmd_item)},
	{"test", cmds_test, sizeof(cmds_test)/sizeof(struct cmd_item)},
	{"read back", cmds_readback, sizeof(cmds_readback)/sizeof(struct cmd_item)},//4
	{"normal_723", cmds_normal_723, sizeof(cmds_normal_723)/sizeof(struct cmd_item)},//5
};

#endif

